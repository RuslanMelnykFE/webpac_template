{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "eslint:recommended"
    // "plugin:import/prefer-default-export",
    // "plugin:import/first"
  ],
  "plugins": [
    "babel",
    "import"
  ],
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "rules": {
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false
      }
    ],
    "no-var": "error",
    "no-new-object": "error",
    "object-shorthand": [
      "error",
      "always"
      // "methods",
      // "properties"
    ],
    "quote-props": [
      "error",
      "as-needed"
    ],
    "no-array-constructor": "error",
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "prefer-template": "error",
    "template-curly-spacing": "error",
    "no-eval": "error",
    "func-style": [
      "error",
      "expression"
    ],
    "wrap-iife": [
      "error",
      "any"
    ],
    "prefer-rest-params": "error",
    "no-new-func": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "always"
      }
    ],
    "space-before-blocks": [
      "error",
      {
        "functions": "always",
        "keywords": "always",
        "classes": "always"
      }
    ],
    "no-param-reassign": [
      "error",
      {
        "props": false
      }
    ],
    "prefer-spread": "error",
    "function-paren-newline": [
      "error",
      "multiline"
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowUnboundThis": false
      }
    ],
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "no-confusing-arrow": [
      "error",
      {
        "allowParens": true
      }
    ],
    "implicit-arrow-linebreak": [
      "error",
      "beside"
    ],
    "no-useless-constructor": "error",
    "no-dupe-class-members": "error",
    "class-methods-use-this": "error",
    "no-duplicate-imports": [
      "error",
      {
        "includeExports": true
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "for-in",
        "message": "for-in are not allowed."
      },
      {
        "selector": "for-of",
        "message": "for-of are not allowed."
      },
      {
        "selector": "CallExpression[callee.name='setTimeout'][arguments.length!=2]",
        "message": "setTimeout must always be invoked with two arguments."
      }
    ],
    "generator-star-spacing": [
      "error",
      {
        "before": false,
        "after": true,
        "anonymous": "neither",
        "method": {
          "before": true,
          "after": true
        }
      }
    ],
    "dot-notation": "error",
    "one-var": [
      "error",
      {
        "var": "always",
        "let": "never",
        "const": "never"
      }
    ],
    "no-multi-assign": "error",
    "operator-linebreak": [
      "error",
      "none",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "eqeqeq": [
      "error",
      "always"
    ],
    "no-case-declarations": "error",
    "no-nested-ternary": "error",
    "no-unneeded-ternary": [
      "error",
      {
        "defaultAssignment": false
      }
    ],
    "no-mixed-operators": [
      "error",
      {
        "groups": [
          [
            "&",
            "|",
            "^",
            "~",
            "<<",
            ">>",
            ">>>"
          ],
          [
            "&&",
            "||"
          ]
        ],
        "allowSamePrecedence": true
      }
    ],
    "nonblock-statement-body-position": [
      "error",
      "beside"
    ],
    "brace-style": "error",
    "no-else-return": [
      "error",
      {
        "allowElseIf": false
      }
    ],
    "indent": [
      "error",
      2,
      {
        "MemberExpression": 1,
        "FunctionDeclaration": {
          "body": 1,
          "parameters": 2
        },
        "FunctionExpression": {
          "body": 1,
          "parameters": 2
        },
        "CallExpression": {
          "arguments": 1
        },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "ignoredNodes": [
          "ConditionalExpression"
        ]
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "space-infix-ops": "error",
    "eol-last": [
      "error",
      "always"
    ],
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    "no-whitespace-before-property": "error",
    "padded-blocks": [
      "error",
      "never"
    ],
    "no-multiple-empty-lines": "error",
    "space-in-parens": [
      "error",
      "never"
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "max-len": [
      "error",
      {
        "code": 100
      }
    ],
    "block-spacing": "error",
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "computed-property-spacing": [
      "error",
      "never"
    ],
    "func-call-spacing": [
      "error",
      "never"
    ],
    "key-spacing": [
      "error",
      {
        "beforeColon": false,
        "afterColon": true,
        "mode": "strict"
      }
    ],
    "no-trailing-spaces": [
      "error",
      {
        "skipBlankLines": true,
        "ignoreComments": true
      }
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "comma-dangle": [
      "error",
      "never"
    ],
    "semi": "error",
    "no-new-wrappers": "error",
    "radix": "error",
    "id-length": [
      "error",
      {
        "min": 2
      }
    ],
    "camelcase": "error",
    "new-cap": [
      "error",
      {
        "newIsCap": true
      }
    ]
  }
}